#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"
require "thor"
require "karist"

require "optparse"

include Karist

class << Thor
  def exit_on_failure?
    true
  end
end

class KaristCLI < Thor
  
  desc "init PATH", "Generates a initial project at PATH"
  def init(path)
    Generator.copy_to_path!(path)
    exit(0)
  end

  desc "version", "Shows Karist CLI version"
  def version
    puts <<~EOF
      Karist #{::VERSION}
      Found a bug ? Open an issue : https://github.com/mimopotato/karist
      Wanna support the development ? Fork and open PR.
    EOF

    exit(0)
  end

  desc "render ENV", "Render releases from environment ENV", default: "development"
  option :dry_run, type: :boolean, desc: "Shows result from mutations to STDOUT", default: false
  option :root, type: :string, desc: "Path to root Karist project", default: Dir.pwd
  option :output, type: :string, desc: "Indicates where final files should be saved", default: "#{Dir.pwd}/output"
  def render(env)
    Dir.chdir(options[:root]) do
      app = Renderer.new(env)
      app.render

      if options[:dry_run]
        puts app.display
        exit(0)
      end

      if app.save_to_path!(options[:output])
        puts "Files were generated successfully ! ğŸ¥³"
        exit(0)
      end
    end
  end
end

KaristCLI.start(ARGV)

